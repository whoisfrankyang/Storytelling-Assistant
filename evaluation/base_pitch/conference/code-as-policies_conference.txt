Abstractâ€” This study explores the profound capabilities of Large Language Models (LLMs) in the domain of code synthesis, specifically within the context of robotic policy code generation. Given natural language directives, these LLMs, initially designed for Python program generation from docstrings [1], efficiently generate robotic policy code by interpreting and manipulating perception outputs through control primitive APIs. The study employs a few-shot prompting methodology, using example language commands and corresponding policy code. This enables LLMs to autonomously generate new policy code via the re-composition of API calls. The LLMs referenced third-party libraries such as NumPy, Shapely, and demonstrated spatial-geometric reasoning, generalization capabilities, and interpretation of ambiguous instructions relative to context. The study introduces "Code as Policies", a novel application of Language Model Generated Programs (LMPs) for creating reactive and waypoint-based policies across diverse robotic platforms. A key component of this approach is the prompting of hierarchical code generation, enhancing complexity and improving the state-of-the-art by solving 39.8% of problems on the HumanEval [1] benchmark. The source code and illustrative videos are accessible at https://code-as-policies.github.io.